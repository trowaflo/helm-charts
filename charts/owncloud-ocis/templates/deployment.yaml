apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "common.fullname" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  revisionHistoryLimit: {{ .Values.controller.revisionHistoryLimit }}
  replicas: {{ .Values.controller.replicas }}
  {{- $strategy := default "Recreate" .Values.controller.strategy }}
  {{- if and (ne $strategy "Recreate") (ne $strategy "RollingUpdate") }}
    {{- fail (printf "Not a valid strategy type for Deployment (%s)" $strategy) }}
  {{- end }}
  strategy:
    type: {{ $strategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.fullname" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      containers:
        - name: {{ include "common.fullname" . }}
          image: {{ printf "%s:%s" .Values.image.repository .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command:
            {{- if kindIs "string" . }}
            - {{ . }}
            {{- else }}
              {{ toYaml . | nindent 14 }}
            {{- end }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- if kindIs "string" . }}
            - {{ . }}
            {{- else }}
            {{ toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          env:
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- if or .Values.envFrom .Values.secret }}
          envFrom:
            {{- with .Values.envFrom }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- if .Values.secret }}
            - secretRef:
                name: {{ include "common.fullname" . }}
            {{- end }}
          {{- end }}
          ports:
            {{- with .Values.service.main.ports }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- with (include "common.volumeMounts" . | trim) }}
          volumeMounts:
            {{- nindent 12 . }}
          {{- end }}

          livenessProbe:
            httpGet:
              path: /status.php
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /status.php
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /status.php
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 30

        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}

        {{- with (include "common.volumes" . | trim) }}
      volumes:
          {{- nindent 8 . }}
        {{- end }}
